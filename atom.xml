<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>林小东的个人博客</title>
  
  <subtitle>记录最近自己的学习或者生活感悟。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.linxiaodongblog.com/"/>
  <updated>2019-03-07T16:41:56.057Z</updated>
  <id>http://www.linxiaodongblog.com/</id>
  
  <author>
    <name>林小东</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JS设计模式-装饰器模式</title>
    <link href="http://www.linxiaodongblog.com/2019/03/07/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>http://www.linxiaodongblog.com/2019/03/07/JS设计模式-装饰器模式/</id>
    <published>2019-03-07T15:23:21.000Z</published>
    <updated>2019-03-07T16:41:56.057Z</updated>
    
    <summary type="html">
    
      &lt;h5 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;为对象添加新功能&lt;/li&gt;
&lt;li&gt;不改变其原有的结构和功能&lt;br&gt;和适配器模式不一样，适配器模式是原有的不能用了，而装饰器模式是原来的还能用，不过给增加一些功能。&lt;br&gt;比如： 手机壳，用来给手机美观，保护，防滑等等
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://www.linxiaodongblog.com/tags/JavaScript/"/>
    
      <category term="设计模式" scheme="http://www.linxiaodongblog.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS设计模式-适配器模式</title>
    <link href="http://www.linxiaodongblog.com/2019/03/05/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>http://www.linxiaodongblog.com/2019/03/05/JS设计模式-适配器模式/</id>
    <published>2019-03-05T14:44:43.000Z</published>
    <updated>2019-03-07T16:43:43.620Z</updated>
    
    <summary type="html">
    
      &lt;h5 id=&quot;什么是适配器模式&quot;&gt;&lt;a href=&quot;#什么是适配器模式&quot; class=&quot;headerlink&quot; title=&quot;什么是适配器模式&quot;&gt;&lt;/a&gt;什么是适配器模式&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;旧接口模式和使用者不兼容&lt;/li&gt;
&lt;li&gt;中间加一个适配器转接口&lt;br&gt;比如你去香港或者出国去一些国家，他们的插排接口和我们都不一样，我要充电不能直接用，这个时候就需要一个适配器来转换一下电压。
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://www.linxiaodongblog.com/tags/JavaScript/"/>
    
      <category term="设计模式" scheme="http://www.linxiaodongblog.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS设计模式-工厂模式</title>
    <link href="http://www.linxiaodongblog.com/2019/03/02/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    <id>http://www.linxiaodongblog.com/2019/03/02/JS设计模式-工厂模式/</id>
    <published>2019-03-02T02:36:44.000Z</published>
    <updated>2019-03-07T16:44:49.421Z</updated>
    
    <summary type="html">
    
      &lt;h5 id=&quot;什么是工厂模式&quot;&gt;&lt;a href=&quot;#什么是工厂模式&quot; class=&quot;headerlink&quot; title=&quot;什么是工厂模式&quot;&gt;&lt;/a&gt;什么是工厂模式&lt;/h5&gt;&lt;p&gt;工厂模式是我们最常用的实例化对象模式了，是用工厂方法代替new操作的一种模式。著名的Jive论坛 ,就大量使用了工厂模式，工厂模式在Java程序系统可以说是随处可见。因为工厂模式就相当于创建实例对象的new，我们经常要根据类Class生成实例对象，如A a=new A() 工厂模式也是用来创建实例对象的，所以以后new时就要多个心眼，是否可以考虑使用工厂模式，虽然这样做，可能多做一些工作，但会给你系统带来更大的可扩展性和尽量少的修改量。&lt;br&gt;属于三大设计类型中的创建型模式。&lt;br&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://www.linxiaodongblog.com/tags/JavaScript/"/>
    
      <category term="设计模式" scheme="http://www.linxiaodongblog.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS设计模式-单列模式</title>
    <link href="http://www.linxiaodongblog.com/2019/03/02/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%95%E5%88%97%E6%A8%A1%E5%BC%8F/"/>
    <id>http://www.linxiaodongblog.com/2019/03/02/JS设计模式-单列模式/</id>
    <published>2019-03-02T01:44:02.000Z</published>
    <updated>2019-03-07T16:51:33.714Z</updated>
    
    <summary type="html">
    
      &lt;h5 id=&quot;什么是单例设计模式&quot;&gt;&lt;a href=&quot;#什么是单例设计模式&quot; class=&quot;headerlink&quot; title=&quot;什么是单例设计模式&quot;&gt;&lt;/a&gt;什么是单例设计模式&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;系统中被唯一使用&lt;/li&gt;
&lt;li&gt;一个类中只有一个实例&lt;/li&gt;
&lt;li&gt;&lt;p&gt;属于三大设计类型中的创建型模式  &lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://www.linxiaodongblog.com/tags/JavaScript/"/>
    
      <category term="设计模式" scheme="http://www.linxiaodongblog.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
</feed>
